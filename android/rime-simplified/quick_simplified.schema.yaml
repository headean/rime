# Rime schema settings
# encoding: utf-8
# 速成简体中文

schema:
  schema_id: quick_simplified               # 注意此ID與文件名裏 .schema.yaml 之前的部分相同
  name: 速成简体                            # 將在〔方案選單〕中顯示
  version: "1.0"                            # 這是文字類型而非整數或小數，如 "1.2.3"
  author:
    - headean <386495531@qq.com>
  description: |
    Rime 自定义简体中文速成輸入方案。
  dependencies:
    - luna_quanpin
    
switches:
  - name: ascii_mode
    reset: 0
    states: [ 中文, 西文 ]
  - name: full_shape
    states: [ 半角, 全角 ]
  - name: simplification
    states: [ 漢字, 汉字 ]
  - name: extended_charset
    states: [ 常用, 增廣 ]
  - name: ascii_punct
    states: [ 。，, ．， ]

engine:                                     # 輸入引擎設定，即掛接組件的「處方」
  processors:                               # 一、這批組件處理各類按鍵消息
    - ascii_composer                        # ※ 處理西文模式及中西文切換
    - recognizer                            # ※ 與 matcher 搭配，處理符合特定規則的輸入碼，如網址、反查等
    - key_binder                            # ※ 在特定條件下將按鍵綁定到其他按鍵，如重定義逗號、句號爲候選翻頁鍵
    - speller                               # ※ 拼寫處理器，接受字符按鍵，編輯輸入碼
    - punctuator                            # ※ 句讀處理器，將單個字符按鍵直接映射爲文字符號
    - selector                              # ※ 選字處理器，處理數字選字鍵、上、下候選定位、換頁鍵
    - navigator                             # ※ 處理輸入欄內的光標移動鍵
    - express_editor                        # ※ 編輯器，處理空格、回車上屏、回退鍵等
    #- fluid_editor                          # ※ 句式編輯器，用於以空格斷詞、回車上屏的【注音】、【語句流】等輸入方案，替換 express_editor，也可以寫作 fluency_editor
  segmentors:                               # 二、這批組件識別不同內容類型，將輸入碼分段
    - ascii_segmentor                       # ※ 標識西文段落
    - matcher                               # ※ 標識符合特定規則的段落，如網址、反查等
    - abc_segmentor                         # ※ 標識常規的文字段落
    - punct_segmentor                       # ※ 標識句讀段落
    - fallback_segmentor                    # ※ 標識其他未標識段落
  translators:                              # 三、這批組件翻譯特定類型的編碼段爲一組候選文字
    - echo_translator                       # ※ 沒有其他候選字時，回顯輸入碼
    - punct_translator                      # ※ 轉換標點符號
    #- script_translator                     # ※ 腳本翻譯器，用於拼音等基於音節表的輸入方案
    - table_translator                      # ※ 碼表翻譯器，用於倉頡、五筆等基於碼表的輸入方案，替換 script_translator
    - reverse_lookup_translator             # ※ 反查翻譯器，用另一種編碼方案查碼
  filters:                                  # 四、這批組件過濾翻譯的結果
    - simplifier                            # ※ 繁簡轉換
    - uniquifier                            # ※ 過濾重複的候選字，有可能來自繁簡轉換
    - single_char_filter

speller:
  alphabet: zyxwvutsrqponmlkjihgfedcba      # 呃，倒背字母表完全是個人喜好
  delimiter: " ;'"                          # 隔音符號用「'」；第一位的空白用來自動插入到音節邊界處
  algebra:                                  # 拼寫運算規則，這個纔是實現雙拼方案的重點。寫法有很多種，當然也可以把四百多個音節碼一條一條地列舉
    - 'derive/^([^z])\w+(\w)$/$1$2/'        # 取倉頡首尾二碼爲速成碼
  #auto_select: true

translator:
  dictionary: quick_simplified              # 與【朙月拼音】共用詞典
  prism: quick_simplified                   # prism 要以本輸入方案的名稱來命名，以免把朙月拼音的拼寫映射表覆蓋掉
  enable_charset_filter: true
  enable_sentence: true
  enable_encoder: true
  encode_commit_history: true
  max_phrase_length: 5
  preedit_format:                           # 這段代碼用來將輸入的雙拼碼反轉爲全拼顯示；待見雙拼碼的可以把這段拿掉
    - 'xform/^([a-z]*)$/$1\t（\U$1\E）/'    # 输入框提示英文对应中文仓颉造字
    - "xlit|ABCDEFGHIJKLMNOPQRSTUVWXYZ|日月金木水火土竹戈十大中一弓人心手口尸廿山女田難卜符|"
  comment_format:
    - "xlit|abcdefghijklmnopqrstuvwxyz~|日月金木水火土竹戈十大中一弓人心手口尸廿山女田難卜符～|"
  disable_user_dict_for_patterns:
    - "^z.*$"
    - "^yyy.*$"
    
abc_segmentor:
  extra_tags:
    - reverse_lookup                        # 與拼音（反查碼）混打

reverse_lookup:
  dictionary: luna_pinyin
  prism: luna_quanpin
  prefix: "`"
  suffix: "'"
  tips: 〔拼音〕
  preedit_format:
    - xform/([nl])v/$1ü/
    - xform/([nl])ue/$1üe/
    - xform/([jqxy])v/$1u/
  comment_format:
    - "xlit|abcdefghijklmnopqrstuvwxyz|日月金木水火土竹戈十大中一弓人心手口尸廿山女田難卜符|"

punctuator:
  import_preset: default

key_binder:
  import_preset: default

recognizer:
  import_preset: default
  patterns:
    reverse_lookup: "`[a-z]*'?$|[a-z]+'$"
    